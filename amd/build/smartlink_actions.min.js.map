{"version":3,"file":"smartlink_actions.min.js","sources":["../src/smartlink_actions.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport * as Str from 'core/str';\n\nclass SmartLinkActions {\n\n    constructor(prompts, courseid, instanceid) {\n        this.prompts = Object.values(prompts);\n        this.courseid = courseid;\n        this.instanceid = instanceid;\n        this.contextid = 1;\n        this.init();\n    }\n\n    init() {\n        $(\".modal\").on(\"hidden.bs.modal\", function () {\n            $('form[name=\"custom-prompt-form\"]')[0].reset();\n        });\n\n        $(\"[data-dismiss='modal']\").on(\"click\", function () {\n            $('form[name=\"custom-prompt-form\"]')[0].reset();\n        });\n\n        //handle modal outside click confirmation\n        $(document).click(async function (e) {\n            if (e.target.id === \"ownPromptModal\") {\n                var confimationMsg = await Str.get_string(\"prompt_modal_close_warning\", \"smartlink\");\n                if (confirm(confimationMsg)) {\n                    $(\".custom-prompt-modal\").modal(\"toggle\");\n                }\n            } else if (e.target.id === \"responseModal\") {\n                var confimationMsg = await Str.get_string(\"response_modal_close_warning\", \"smartlink\");\n                if (confirm(confimationMsg)) {\n                    $(\".response-modal\").modal(\"toggle\");\n                }\n            }\n        });\n\n        $(\".run-prompt-btn\").click(\n            function (e) {\n                e.preventDefault();\n                var attrVal = $(e.currentTarget).attr(\"data-id\");\n                var promptSetting = this.prompts.find((prompt) => prompt.id == attrVal);\n                if (promptSetting) {\n                    this.getAiResponse({ promptid: promptSetting.id, courseid: this.courseid, instanceid: this.instanceid });\n                }\n            }.bind(this)\n        );\n        $(\".submit-own-prompt-btn\").click(\n            function (e) {\n                e.preventDefault();\n                var promptVal = $(\"textarea[name='prompt']\").val();\n                this.getAiResponse({ prompt: promptVal, courseid: this.courseid, instanceid: this.instanceid });\n            }.bind(this)\n        );\n    }\n\n    getAiResponse(promptdata) {\n        $(\"#loader\").removeClass(\"d-none\");\n        Ajax.call([\n            {\n                methodname: \"mod_smartlink_prompt_openai\",\n                args: { contextid: this.contextid, jsondata: JSON.stringify(promptdata) },\n                done: this.handleResponse.bind(this),\n                fail: this.handleFailure.bind(this),\n            },\n        ]);\n    }\n\n  // On a succesful response\n    handleResponse(response) {\n        $(\"#loader\").addClass(\"d-none\");\n        var responseObj = JSON.parse(response);\n\n        if ($(\"#ownPromptModal\").is(\":visible\")) {\n            $(\"#ownPromptModal\").modal(\"toggle\");\n        }\n\n        // Might contain errors anyway\n        if (responseObj.success == false) {\n            alert(responseObj.message);\n        } else {\n            var data = responseObj.data;\n            $(\".prompt-desc\").html(data.description);\n            $(\".prompt-text\").html(data.prompt_text);\n            $(\".ai-response\").html(data.result.replace(/\\n/g, \"<br/>\"));\n            $(\"#responseModal\").modal(\"toggle\");\n        }\n    }\n\n    // Failure\n    handleFailure(response) {\n        $(\"#loader\").addClass(\"d-none\");\n        var responseObj = JSON.parse(response);\n        alert(responseObj.message);\n    }\n}\n\nexport const init = (prompts, courseid, instanceid) => {\n    return new SmartLinkActions(prompts, courseid, instanceid);\n};\n"],"names":["SmartLinkActions","constructor","prompts","courseid","instanceid","Object","values","contextid","init","on","reset","document","click","async","e","target","id","confimationMsg","Str","get_string","confirm","modal","preventDefault","attrVal","currentTarget","attr","promptSetting","this","find","prompt","getAiResponse","promptid","bind","promptVal","val","promptdata","removeClass","call","methodname","args","jsondata","JSON","stringify","done","handleResponse","fail","handleFailure","response","addClass","responseObj","parse","is","success","alert","message","data","html","description","prompt_text","result","replace"],"mappings":"qxCAIMA,iBAEFC,YAAYC,QAASC,SAAUC,iBACtBF,QAAUG,OAAOC,OAAOJ,cACxBC,SAAWA,cACXC,WAAaA,gBACbG,UAAY,OACZC,OAGTA,2BACM,UAAUC,GAAG,mBAAmB,+BAC5B,mCAAmC,GAAGC,+BAG1C,0BAA0BD,GAAG,SAAS,+BAClC,mCAAmC,GAAGC,+BAI1CC,UAAUC,OAAMC,eAAgBC,MACV,mBAAhBA,EAAEC,OAAOC,GAAyB,KAC9BC,qBAAuBC,IAAIC,WAAW,6BAA8B,aACpEC,QAAQH,qCACN,wBAAwBI,MAAM,eAEjC,GAAoB,kBAAhBP,EAAEC,OAAOC,GAAwB,CACpCC,qBAAuBC,IAAIC,WAAW,+BAAgC,aACtEC,QAAQH,qCACN,mBAAmBI,MAAM,kCAKrC,mBAAmBT,MACjB,SAAUE,GACNA,EAAEQ,qBACEC,SAAU,mBAAET,EAAEU,eAAeC,KAAK,WAClCC,cAAgBC,KAAKzB,QAAQ0B,MAAMC,QAAWA,OAAOb,IAAMO,UAC3DG,oBACKI,cAAc,CAAEC,SAAUL,cAAcV,GAAIb,SAAUwB,KAAKxB,SAAUC,WAAYuB,KAAKvB,cAEjG4B,KAAKL,2BAET,0BAA0Bf,MACxB,SAAUE,GACNA,EAAEQ,qBACEW,WAAY,mBAAE,2BAA2BC,WACxCJ,cAAc,CAAED,OAAQI,UAAW9B,SAAUwB,KAAKxB,SAAUC,WAAYuB,KAAKvB,cACpF4B,KAAKL,OAIfG,cAAcK,gCACR,WAAWC,YAAY,wBACpBC,KAAK,CACN,CACIC,WAAY,8BACZC,KAAM,CAAEhC,UAAWoB,KAAKpB,UAAWiC,SAAUC,KAAKC,UAAUP,aAC5DQ,KAAMhB,KAAKiB,eAAeZ,KAAKL,MAC/BkB,KAAMlB,KAAKmB,cAAcd,KAAKL,SAM1CiB,eAAeG,8BACT,WAAWC,SAAS,cAClBC,YAAcR,KAAKS,MAAMH,cAEzB,mBAAE,mBAAmBI,GAAG,iCACtB,mBAAmB9B,MAAM,UAIJ,GAAvB4B,YAAYG,QACZC,MAAMJ,YAAYK,aACf,KACCC,KAAON,YAAYM,yBACrB,gBAAgBC,KAAKD,KAAKE,iCAC1B,gBAAgBD,KAAKD,KAAKG,iCAC1B,gBAAgBF,KAAKD,KAAKI,OAAOC,QAAQ,MAAO,8BAChD,kBAAkBvC,MAAM,WAKlCyB,cAAcC,8BACR,WAAWC,SAAS,cAClBC,YAAcR,KAAKS,MAAMH,UAC7BM,MAAMJ,YAAYK,wBAIN,CAACpD,QAASC,SAAUC,aAC7B,IAAIJ,iBAAiBE,QAASC,SAAUC"}